// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-collection@v0.1.0-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@v0.1.1-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.1.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.1.1-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-index-of@v0.1.0-esm/index.mjs";var o=["values","indices","*"];function l(t,r){return e(r)?(n(r,"thisArg")&&(t.thisArg=r.thisArg),n(r,"returns")&&(t.returns=r.returns,-1===i(o,t.returns))?new TypeError(s('invalid option. `%s` option must be one of the following: "%s". Option: `%s`.',"returns",o.join('", "'),t.returns)):null):new TypeError(s("invalid argument. Options argument must be an object. Value: `%s`.",r))}function u(t,r,s){var e,i,o,l,u,a;for(e=r.thisArg,o=t.length,i={},a=0;a<o;a++)u=t[a],l=s.call(e,u,a),n(i,l)?i[l].push(u):i[l]=[u];return i}function a(t,r,s){var e,i,o,l,u;for(e=r.thisArg,o=t.length,i={},u=0;u<o;u++)l=s.call(e,t[u],u),n(i,l)?i[l].push(u):i[l]=[u];return i}function m(t,r,s){var e,i,o,l,u,a;for(e=r.thisArg,o=t.length,i={},a=0;a<o;a++)u=t[a],l=s.call(e,u,a),n(i,l)?i[l].push([a,u]):i[l]=[[a,u]];return i}function d(e,n,i){var o,d,h;if(!t(e))throw new TypeError(s("invalid argument. First argument must be a collection. Value: `%s`.",e));if(o={returns:"values"},2===arguments.length)h=n;else{if(d=l(o,n))throw d;h=i}if(!r(h))throw new TypeError(s("invalid argument. Last argument must be a function. Value: `%s`.",h));return"values"===o.returns?u(e,o,h):"indices"===o.returns?a(e,o,h):m(e,o,h)}export{d as default};
//# sourceMappingURL=index.mjs.map
