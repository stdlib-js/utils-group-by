// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-collection@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-index-of@esm/index.mjs";var o=e,l=n,u=i,a=s,m=["values","indices","*"];var d=n;var h=n;var p=n;var f=r,c=t,g=s,v=function(r,t){return o(t)?(l(t,"thisArg")&&(r.thisArg=t.thisArg),l(t,"returns")&&(r.returns=t.returns,-1===u(m,r.returns))?new TypeError(a('invalid option. `%s` option must be one of the following: "%s". Option: `%s`.',"returns",m.join('", "'),r.returns)):null):new TypeError(a("invalid argument. Options argument must be an object. Value: `%s`.",t))},j=function(r,t,s){var e,n,i,o,l,u;for(e=t.thisArg,i=r.length,n={},u=0;u<i;u++)l=r[u],o=s.call(e,l,u),d(n,o)?n[o].push(l):n[o]=[l];return n},b=function(r,t,s){var e,n,i,o,l;for(e=t.thisArg,i=r.length,n={},l=0;l<i;l++)o=s.call(e,r[l],l),h(n,o)?n[o].push(l):n[o]=[l];return n},w=function(r,t,s){var e,n,i,o,l,u;for(e=t.thisArg,i=r.length,n={},u=0;u<i;u++)l=r[u],o=s.call(e,l,u),p(n,o)?n[o].push([u,l]):n[o]=[[u,l]];return n};var x=function(r,t,s){var e,n,i;if(!f(r))throw new TypeError(g("invalid argument. First argument must be a collection. Value: `%s`.",r));if(e={returns:"values"},2===arguments.length)i=t;else{if(n=v(e,t))throw n;i=s}if(!c(i))throw new TypeError(g("invalid argument. Last argument must be a function. Value: `%s`.",i));return"values"===e.returns?j(r,e,i):"indices"===e.returns?b(r,e,i):w(r,e,i)};export{x as default};
//# sourceMappingURL=index.mjs.map
